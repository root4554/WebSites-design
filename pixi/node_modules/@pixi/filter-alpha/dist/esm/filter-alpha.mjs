/*!
 * @pixi/filter-alpha - v7.0.0-alpha.3
 * Compiled Fri, 23 Sep 2022 14:33:14 UTC
 *
 * @pixi/filter-alpha is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter, defaultVertex } from '@pixi/core';

var fragment = "varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float uAlpha;\n\nvoid main(void)\n{\n   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;\n}\n";

class AlphaFilter extends Filter {
  constructor(alpha = 1) {
    super(defaultVertex, fragment, { uAlpha: 1 });
    this.alpha = alpha;
  }
  get alpha() {
    return this.uniforms.uAlpha;
  }
  set alpha(value) {
    this.uniforms.uAlpha = value;
  }
}

export { AlphaFilter };
//# sourceMappingURL=filter-alpha.mjs.map
