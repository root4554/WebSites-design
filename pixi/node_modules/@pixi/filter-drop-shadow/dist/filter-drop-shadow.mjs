/*!
 * @pixi/filter-drop-shadow - v5.0.0
 * Compiled Fri, 23 Sep 2022 20:48:56 UTC
 *
 * @pixi/filter-drop-shadow is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */import{KawaseBlurFilter as o}from"@pixi/filter-kawase-blur";import{settings as a,Filter as u,Point as x,DEG_TO_RAD as h,utils as p}from"@pixi/core";var S=`attribute vec2 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat3 projectionMatrix;

varying vec2 vTextureCoord;

void main(void)
{
    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);
    vTextureCoord = aTextureCoord;
}`,w=`varying vec2 vTextureCoord;
uniform sampler2D uSampler;
uniform float alpha;
uniform vec3 color;

uniform vec2 shift;
uniform vec4 inputSize;

void main(void){
    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);

    // Premultiply alpha
    sample.rgb = color.rgb * sample.a;

    // alpha user alpha
    sample *= alpha;

    gl_FragColor = sample;
}`,O=Object.defineProperty,c=Object.getOwnPropertySymbols,T=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable,d=(t,i,e)=>i in t?O(t,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[i]=e,_=(t,i)=>{for(var e in i||(i={}))T.call(i,e)&&d(t,e,i[e]);if(c)for(var e of c(i))P.call(i,e)&&d(t,e,i[e]);return t};const n=class extends u{constructor(t){super(),this.angle=45,this._distance=5,this._resolution=a.FILTER_RESOLUTION;const i=t?_(_({},n.defaults),t):n.defaults,{kernels:e,blur:l,quality:r,pixelSize:F,resolution:s}=i;this._tintFilter=new u(S,w),this._tintFilter.uniforms.color=new Float32Array(4),this._tintFilter.uniforms.shift=new x,this._tintFilter.resolution=s,this._blurFilter=e?new o(e):new o(l,r),this.pixelSize=F,this.resolution=s;const{shadowOnly:f,rotation:g,distance:m,alpha:v,color:y}=i;this.shadowOnly=f,this.rotation=g,this.distance=m,this.alpha=v,this.color=y,this._updatePadding()}apply(t,i,e,l){const r=t.getFilterTexture();this._tintFilter.apply(t,i,r,1),this._blurFilter.apply(t,r,e,l),this.shadowOnly!==!0&&t.applyFilter(this,i,e,0),t.returnFilterTexture(r)}_updatePadding(){this.padding=this.distance+this.blur*2}_updateShift(){this._tintFilter.uniforms.shift.set(this.distance*Math.cos(this.angle),this.distance*Math.sin(this.angle))}get resolution(){return this._resolution}set resolution(t){this._resolution=t,this._tintFilter&&(this._tintFilter.resolution=t),this._blurFilter&&(this._blurFilter.resolution=t)}get distance(){return this._distance}set distance(t){this._distance=t,this._updatePadding(),this._updateShift()}get rotation(){return this.angle/h}set rotation(t){this.angle=t*h,this._updateShift()}get alpha(){return this._tintFilter.uniforms.alpha}set alpha(t){this._tintFilter.uniforms.alpha=t}get color(){return p.rgb2hex(this._tintFilter.uniforms.color)}set color(t){p.hex2rgb(t,this._tintFilter.uniforms.color)}get kernels(){return this._blurFilter.kernels}set kernels(t){this._blurFilter.kernels=t}get blur(){return this._blurFilter.blur}set blur(t){this._blurFilter.blur=t,this._updatePadding()}get quality(){return this._blurFilter.quality}set quality(t){this._blurFilter.quality=t}get pixelSize(){return this._blurFilter.pixelSize}set pixelSize(t){this._blurFilter.pixelSize=t}};let b=n;b.defaults={rotation:45,distance:5,color:0,alpha:.5,shadowOnly:!1,kernels:null,blur:2,quality:3,pixelSize:1,resolution:a.FILTER_RESOLUTION};export{b as DropShadowFilter};
//# sourceMappingURL=filter-drop-shadow.mjs.map
