{"version":3,"file":"filter-outline.mjs","sources":["../src/OutlineFilter.ts"],"sourcesContent":["import { vertex } from '@tools/fragments';\nimport fragment from './outline.frag';\nimport { Filter, utils } from '@pixi/core';\nimport type { FilterSystem, RenderTexture, CLEAR_MODES } from '@pixi/core';\n\n/**\n * OutlineFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\n * http://codepen.io/mishaa/pen/emGNRB<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/outline.png)\n *\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@pixi/filter-outline|@pixi/filter-outline}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters} *\n * @example\n *  someSprite.filters = [new OutlineFilter(2, 0x99ff99)];\n */\nclass OutlineFilter extends Filter\n{\n    /** The minimum number of samples for rendering outline. */\n    public static MIN_SAMPLES = 1;\n\n    /** The maximum number of samples for rendering outline. */\n    public static MAX_SAMPLES = 100;\n\n    private _thickness = 1;\n\n    /**\n     * @param {number} [thickness=1] - The tickness of the outline. Make it 2 times more for resolution 2\n     * @param {number} [color=0x000000] - The color of the outline.\n     * @param {number} [quality=0.1] - The quality of the outline from `0` to `1`, using a higher quality\n     *        setting will result in slower performance and more accuracy.\n     */\n    constructor(thickness = 1, color = 0x000000, quality = 0.1)\n    {\n        super(vertex, fragment.replace(/\\$\\{angleStep\\}/, OutlineFilter.getAngleStep(quality)));\n\n        this.uniforms.thickness = new Float32Array([0, 0]);\n        this.uniforms.outlineColor = new Float32Array([0, 0, 0, 1]);\n\n        Object.assign(this, { thickness, color, quality });\n    }\n\n    /**\n     * Get the angleStep by quality\n     * @private\n     */\n    private static getAngleStep(quality: number): string\n    {\n        const samples =  Math.max(\n            quality * OutlineFilter.MAX_SAMPLES,\n            OutlineFilter.MIN_SAMPLES,\n        );\n\n        return (Math.PI * 2 / samples).toFixed(7);\n    }\n\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        this.uniforms.thickness[0] = this._thickness / input._frame.width;\n        this.uniforms.thickness[1] = this._thickness / input._frame.height;\n\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * The color of the glow.\n     * @default 0x000000\n     */\n    get color(): number\n    {\n        return utils.rgb2hex(this.uniforms.outlineColor);\n    }\n    set color(value: number)\n    {\n        utils.hex2rgb(value, this.uniforms.outlineColor);\n    }\n\n    /**\n     * The thickness of the outline.\n     * @default 1\n     */\n    get thickness(): number\n    {\n        return this._thickness;\n    }\n    set thickness(value: number)\n    {\n        this._thickness = value;\n        this.padding = value;\n    }\n}\n\nexport { OutlineFilter };\n"],"names":["_OutlineFilter","Filter","thickness","color","quality","vertex","fragment","samples","filterManager","input","output","clear","utils","value","OutlineFilter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkBA,MAAMA,EAAN,cAA4BC,CAC5B,CAeI,YAAYC,EAAY,EAAGC,EAAQ,EAAUC,EAAU,GACvD,CACI,MAAMC,EAAQC,EAAS,QAAQ,kBAAmBN,EAAc,aAAaI,CAAO,CAAC,CAAC,EAV1F,KAAQ,WAAa,EAYjB,KAAK,SAAS,UAAY,IAAI,aAAa,CAAC,EAAG,CAAC,CAAC,EACjD,KAAK,SAAS,aAAe,IAAI,aAAa,CAAC,EAAG,EAAG,EAAG,CAAC,CAAC,EAE1D,OAAO,OAAO,KAAM,CAAE,UAAAF,EAAW,MAAAC,EAAO,QAAAC,CAAQ,CAAC,CACrD,CAMA,OAAe,aAAaA,EAC5B,CACI,MAAMG,EAAW,KAAK,IAClBH,EAAUJ,EAAc,YACxBA,EAAc,WAClB,EAEA,OAAQ,KAAK,GAAK,EAAIO,GAAS,QAAQ,CAAC,CAC5C,CAEA,MAAMC,EAA6BC,EAAsBC,EAAuBC,EAChF,CACI,KAAK,SAAS,UAAU,GAAK,KAAK,WAAaF,EAAM,OAAO,MAC5D,KAAK,SAAS,UAAU,GAAK,KAAK,WAAaA,EAAM,OAAO,OAE5DD,EAAc,YAAY,KAAMC,EAAOC,EAAQC,CAAK,CACxD,CAMA,IAAI,OACJ,CACI,OAAOC,EAAM,QAAQ,KAAK,SAAS,YAAY,CACnD,CACA,IAAI,MAAMC,EACV,CACID,EAAM,QAAQC,EAAO,KAAK,SAAS,YAAY,CACnD,CAMA,IAAI,WACJ,CACI,OAAO,KAAK,UAChB,CACA,IAAI,UAAUA,EACd,CACI,KAAK,WAAaA,EAClB,KAAK,QAAUA,CACnB,CACJ,MA1EMC,EAANd,EAAMc,EAGY,YAAc,EAH1BA,EAMY,YAAc"}