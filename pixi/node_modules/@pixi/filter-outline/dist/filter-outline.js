"use strict";/*!
 * @pixi/filter-outline - v5.0.0
 * Compiled Fri, 23 Sep 2022 20:48:56 UTC
 *
 * @pixi/filter-outline is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */Object.defineProperty(exports,"__esModule",{value:!0});var o=require("@pixi/core"),l=`attribute vec2 aVertexPosition;
attribute vec2 aTextureCoord;

uniform mat3 projectionMatrix;

varying vec2 vTextureCoord;

void main(void)
{
    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);
    vTextureCoord = aTextureCoord;
}`,a=`varying vec2 vTextureCoord;
uniform sampler2D uSampler;

uniform vec2 thickness;
uniform vec4 outlineColor;
uniform vec4 filterClamp;

const float DOUBLE_PI = 3.14159265358979323846264 * 2.;

void main(void) {
    vec4 ownColor = texture2D(uSampler, vTextureCoord);
    vec4 curColor;
    float maxAlpha = 0.;
    vec2 displaced;
    for (float angle = 0.; angle <= DOUBLE_PI; angle += \${angleStep}) {
        displaced.x = vTextureCoord.x + thickness.x * cos(angle);
        displaced.y = vTextureCoord.y + thickness.y * sin(angle);
        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));
        maxAlpha = max(maxAlpha, curColor.a);
    }
    float resultAlpha = max(maxAlpha, ownColor.a);
    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);
}
`;const n=class extends o.Filter{constructor(e=1,t=0,r=.1){super(l,a.replace(/\$\{angleStep\}/,n.getAngleStep(r))),this._thickness=1,this.uniforms.thickness=new Float32Array([0,0]),this.uniforms.outlineColor=new Float32Array([0,0,0,1]),Object.assign(this,{thickness:e,color:t,quality:r})}static getAngleStep(e){const t=Math.max(e*n.MAX_SAMPLES,n.MIN_SAMPLES);return(Math.PI*2/t).toFixed(7)}apply(e,t,r,s){this.uniforms.thickness[0]=this._thickness/t._frame.width,this.uniforms.thickness[1]=this._thickness/t._frame.height,e.applyFilter(this,t,r,s)}get color(){return o.utils.rgb2hex(this.uniforms.outlineColor)}set color(e){o.utils.hex2rgb(e,this.uniforms.outlineColor)}get thickness(){return this._thickness}set thickness(e){this._thickness=e,this.padding=e}};let i=n;i.MIN_SAMPLES=1,i.MAX_SAMPLES=100,exports.OutlineFilter=i;
//# sourceMappingURL=filter-outline.js.map
