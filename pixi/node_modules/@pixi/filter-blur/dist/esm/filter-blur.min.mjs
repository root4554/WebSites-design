/*!
 * @pixi/filter-blur - v7.0.0-alpha.3
 * Compiled Fri, 23 Sep 2022 14:33:14 UTC
 *
 * @pixi/filter-blur is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */import{Filter as g,settings as p,CLEAR_MODES as h}from"@pixi/core";const c=`
    attribute vec2 aVertexPosition;

    uniform mat3 projectionMatrix;

    uniform float strength;

    varying vec2 vBlurTexCoords[%size%];

    uniform vec4 inputSize;
    uniform vec4 outputFrame;

    vec4 filterVertexPosition( void )
    {
        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;

        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);
    }

    vec2 filterTextureCoord( void )
    {
        return aVertexPosition * (outputFrame.zw * inputSize.zw);
    }

    void main(void)
    {
        gl_Position = filterVertexPosition();

        vec2 textureCoord = filterTextureCoord();
        %blur%
    }`;function x(n,t){const i=Math.ceil(n/2);let e=c,s="",u;t?u="vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);":u="vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);";for(let l=0;l<n;l++){let r=u.replace("%index%",l.toString());r=r.replace("%sampleIndex%",`${l-(i-1)}.0`),s+=r,s+=`
`}return e=e.replace("%blur%",s),e=e.replace("%size%",n.toString()),e}const F={5:[.153388,.221461,.250301],7:[.071303,.131514,.189879,.214607],9:[.028532,.067234,.124009,.179044,.20236],11:[.0093,.028002,.065984,.121703,.175713,.198596],13:[.002406,.009255,.027867,.065666,.121117,.174868,.197641],15:[489e-6,.002403,.009246,.02784,.065602,.120999,.174697,.197448]},m=["varying vec2 vBlurTexCoords[%size%];","uniform sampler2D uSampler;","void main(void)","{","    gl_FragColor = vec4(0.0);","    %blur%","}"].join(`
`);function v(n){const t=F[n],i=t.length;let e=m,s="";const u="gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;";let l;for(let r=0;r<n;r++){let o=u.replace("%index%",r.toString());l=r,r>=i&&(l=n-r-1),o=o.replace("%value%",t[l].toString()),s+=o,s+=`
`}return e=e.replace("%blur%",s),e=e.replace("%size%",n.toString()),e}class a extends g{constructor(t,i=8,e=4,s=p.FILTER_RESOLUTION,u=5){const l=x(u,t),r=v(u);super(l,r),this.horizontal=t,this.resolution=s,this._quality=0,this.quality=e,this.blur=i}apply(t,i,e,s){if(e?this.horizontal?this.uniforms.strength=1/e.width*(e.width/i.width):this.uniforms.strength=1/e.height*(e.height/i.height):this.horizontal?this.uniforms.strength=1/t.renderer.width*(t.renderer.width/i.width):this.uniforms.strength=1/t.renderer.height*(t.renderer.height/i.height),this.uniforms.strength*=this.strength,this.uniforms.strength/=this.passes,this.passes===1)t.applyFilter(this,i,e,s);else{const u=t.getFilterTexture(),l=t.renderer;let r=i,o=u;this.state.blend=!1,t.applyFilter(this,r,o,h.CLEAR);for(let d=1;d<this.passes-1;d++){t.bindAndClear(r,h.BLIT),this.uniforms.uSampler=o;const b=o;o=r,r=b,l.shader.bind(this),l.geometry.draw(5)}this.state.blend=!0,t.applyFilter(this,o,e,s),t.returnFilterTexture(u)}}get blur(){return this.strength}set blur(t){this.padding=1+Math.abs(t)*2,this.strength=t}get quality(){return this._quality}set quality(t){this._quality=t,this.passes=t}}class y extends g{constructor(t=8,i=4,e=p.FILTER_RESOLUTION,s=5){super(),this.blurXFilter=new a(!0,t,i,e,s),this.blurYFilter=new a(!1,t,i,e,s),this.resolution=e,this.quality=i,this.blur=t,this.repeatEdgePixels=!1}apply(t,i,e,s){const u=Math.abs(this.blurXFilter.strength),l=Math.abs(this.blurYFilter.strength);if(u&&l){const r=t.getFilterTexture();this.blurXFilter.apply(t,i,r,h.CLEAR),this.blurYFilter.apply(t,r,e,s),t.returnFilterTexture(r)}else l?this.blurYFilter.apply(t,i,e,s):this.blurXFilter.apply(t,i,e,s)}updatePadding(){this._repeatEdgePixels?this.padding=0:this.padding=Math.max(Math.abs(this.blurXFilter.strength),Math.abs(this.blurYFilter.strength))*2}get blur(){return this.blurXFilter.blur}set blur(t){this.blurXFilter.blur=this.blurYFilter.blur=t,this.updatePadding()}get quality(){return this.blurXFilter.quality}set quality(t){this.blurXFilter.quality=this.blurYFilter.quality=t}get blurX(){return this.blurXFilter.blur}set blurX(t){this.blurXFilter.blur=t,this.updatePadding()}get blurY(){return this.blurYFilter.blur}set blurY(t){this.blurYFilter.blur=t,this.updatePadding()}get blendMode(){return this.blurYFilter.blendMode}set blendMode(t){this.blurYFilter.blendMode=t}get repeatEdgePixels(){return this._repeatEdgePixels}set repeatEdgePixels(t){this._repeatEdgePixels=t,this.updatePadding()}}export{y as BlurFilter,a as BlurFilterPass};
//# sourceMappingURL=filter-blur.min.mjs.map
